*** Settings ***

Variables	UserDefinedVariables.py
Resource	UserKeywords.robot

Library		String
Library		OperatingSystem
Library		Collections

Library		DoorTesterLib.py	${HOST}
Library		ProtocolTesterLib.py	
Library		FileTesterLib.py	
Suite Setup	TEST PROTOCOL DOOR	${PROTOCOL}	${PORT}
Suite Teardown	REMOVE LOCAL AND REMOTE FILES WITH NAMES CONTAINING	testfile	testo



*** Variables ***

${CLIENT}	srmcp
${PROTOCOL}	srm
${PORT}		&{PROTOCOL_PORTS}[${PROTOCOL}]

# Default SRM version, can be overwritten in command line call
${SRM_VERSION}	2



*** Test Cases ***
COPY MD5
	[Documentation]	Copy a file and use md5 for the checksum. After copying it back it should still be the same
	SET CLIENT	${CLIENT}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -cksm_type=MD5 -retry_num=0
	${FILE_NAME}=	REPLACE STRING	${TEST NAME}	${SPACE}	${EMPTY}
	CREATE FILE	${LOCAL_FILE}${FILE_NAME}	This is a testfile for ${TEST NAME}
	COPY LOCAL FILE		${LOCAL_FILE}${FILE_NAME}	${REMOTE_FILE}${FILE_NAME}
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -retry_num=0
	COPY REMOTE FILE	${REMOTE_FILE}${FILE_NAME}	${LOCAL_FILE}${FILe_NAME}1
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	FILES SHOULD BE THE SAME	${LOCAL_FILE}${FILE_NAME}	${LOCAL_FILE}${FILE_NAME}1	hash_type=md5


COPY BAD CHECKSUM MD5
	[Documentation]	Copies a file from which the content (and thus checksum calculated with md5) changes during the copy call (/proc/uptime).
	SET CLIENT	${CLIENT}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -cksm_type=MD5 -retry_num=0
	${FILE_NAME}=	REPLACE STRING	${TEST NAME}	${SPACE}	${EMPTY}
	COPY LOCAL FILE		/proc/uptime	${REMOTE_FILE}${FILE_NAME}
	ERROR SHOULD CONTAIN		Checksum mismatch
	
COPY BAD CHECKSUM
	[Documentation]	Copies a file from which the content (and thus checksum) changes during the copy call (/proc/uptime)
	SET CLIENT	${CLIENT}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -retry_num=0
	${FILE_NAME}=	REPLACE STRING	${TEST_NAME}	${SPACE}	${EMPTY}
	COPY LOCAL FILE		/proc/uptime	${REMOTE_FILE}${FILE_NAME}
	ERROR SHOULD CONTAIN	Checksum mismatch

COPY DIR NOT EXIST
	[Documentation]	Copies a file to a directory that doesn't exist yet. This should create the directory on the fly
	SET CLIENT	${CLIENT}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -retry_num=0
	${FILE_NAME}=	REPLACE STRING	${TEST NAME}	${SPACE}	${EMPTY}
	CREATE FILE	${LOCAL_FILE}${FILE_NAME}	This is a testfile for ${TEST NAME}
	COPY LOCAL FILE		${LOCAL_FILE}${FILE_NAME}	${REMOTE_FILE}/${FILE_NAME}
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	COPY REMOTE FILE	${REMOTE_FILE}/${FILE_NAME}	${LOCAL_FILE}${FILE_NAME}1
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	FILES SHOULD BE THE SAME	${LOCAL_FILE}${FILE_NAME}	${LOCAL_FILE}${FILE_NAME}1
	SET CLIENT	srmrm
	REMOVE REMOTE FILE	${REMOTE_FILE}/${FILE_NAME}
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	SET CLIENT	srmrmdir
	REMOVE REMOTE DIRECTORY	${REMOTE_FILE}
	COMMAND SHOULD EXECUTE SUCCESSFULLY


COPY HTTP
	[Documentation]	Copy a file using srm and then copy it with http to srm on the same host again.
	[Tags]	broken_on_srmV1
	SET CLIENT	${CLIENT}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	SET EXTRA ARGUMENTS	-${SRM_VERSION} -retry_num=0
	${FILE_NAME}=	REPLACE STRING	${TEST NAME}	${SPACE}	${EMPTY}
	CREATE FILE	${LOCAL_FILE}${FILe_NAME}	This is a testfile for ${TEST NAME}
	COPY LOCAL FILE		${LOCAL_FILE}${FILE_NAME}	${REMOTE_FILE}${FILE_NAME}
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	SET PROTOCOL	http	&{PROTOCOL_PORTS}[http]		${PROTOCOL}	${PORT}
	SET HOST	${HOST}		${HOST}
	COPY REMOTE TO REMOTE	${REMOTE_FILE}${FILE_NAME}	${REMOTE_FILE}${FILE_NAME}1
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	SET PROTOCOL	${PROTOCOL}	${PORT}
	COPY REMOTE FILE	${REMOTE_FILE}${FILE_NAME}1	${LOCAL_FILE}${FILE_NAME}1
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	FILES SHOULD BE THE SAME	${LOCAL_FILE}${FILE_NAME}	${LOCAL_FILE}${FILE_NAME}1
