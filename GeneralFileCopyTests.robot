
*** Settings ***
Library		OperatingSystem
Library		Collections
Library		DateTime
Library		ProtocolTesterLib.py
Library		DoorTesterLib.py	${HOST}
Library		FileTesterLib.py	
Suite Setup	CHECK IF DOORS ARE OPEN		${PROTOCOL_DOORS}
Suite Teardown	REMOVE LOCAL AND REMOTE FILES WITH NAMES CONTAINING	testfile	testo
Test Template	COPY FILE WITH CLIENT AND PROTOCOL
Test Setup	REMOVE LOCAL AND REMOTE FILES WITH NAMES CONTAINING	testfile 	testo

*** Variables ***

${HOST}         prometheus.desy.de

&{PROTOCOL_DOORS}	srm=8443	gsidcap=22128	gsiftp=2811


${LOCAL_DIR}	/scratch/jenkins/jenkins/workspace/robot-g2-tests/
${LOCAL_FILE}   /scratch/jenkins/jenkins/workspace/robot-g2-tests/testfile
${REMOTE_FILE}  /Users/kermit/testo
${REMOTE_DIR}	/Users/kermit/

*** Test Cases ***
SRMCP	srmcp	srm	${LOCAL_FILE}	${REMOTE_FILE}
DCCP	dccp	gsidcap	${LOCAL_FILE}	${REMOTE_FILE}	-A
GLOBUS	globus-url-copy	gsiftp	${LOCAL_FILE}	${REMOTE_FILE}
ARCCP	arccp	srm	${LOCAL_FILE}	${REMOTE_FILE}


*** Keywords ***

COPY FILE WITH CLIENT AND PROTOCOL
	[Arguments]	${CLIENT}	${PROTOCOL}	${LOCAL_FILE}	${REMOTE_FILE}	${EXTRA_ARGUMENTS}=${EMPTY}
	CREATE FILE	${LOCAL_FILE}${TEST NAME}	This is a testfile for ${TEST NAME}
	SET CLIENT	${CLIENT}
	${PORT}=	GET FROM DICTIONARY	${PROTOCOL_DOORS}	${PROTOCOL}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET EXTRA ARGUMENTS	${EXTRA_ARGUMENTS}
	SET HOST	${HOST}
	COPY LOCAL FILE	${LOCAL_FILE}${TEST NAME}	${REMOTE_FILE}${TEST NAME}
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	COPY REMOTE FILE	${REMOTE_FILE}${TEST NAME}	${LOCAL_FILE}${TEST NAME}1
	COMMAND SHOULD EXECUTE SUCCESSFULLY
	FILES SHOULD BE THE SAME	${LOCAL_FILE}${TEST NAME}	${LOCAL_FILE}${TEST NAME}1	

REMOVE FILE WITH CLIENT AND PROTOCOL
	[Arguments]	${CLIENT}	${PROTOCOL}	${REMOTE_FILE}
	SET CLIENT	${CLIENT}
	${PORT}=	GET FROM DICTIONARY	${PROTOCOL_DOORS}	${PROTOCOL}
	SET PROTOCOL	${PROTOCOL}	${PORT}
	SET HOST	${HOST}
	REMOVE REMOTE FILE	${REMOTE_FILE}
	COMMAND SHOULD EXECUTE SUCCESSFULLY

CHECK IF DOORS ARE OPEN
	[Arguments]	${PROTOCOL_DOORS}
	${PROTOCOL_DOOR_PAIRS}=	GET DICTIONARY ITEMS	${PROTOCOL_DOORS}
	:FOR	${PROTOCOL}	${DOOR}		IN	@{PROTOCOL_DOOR_PAIRS}
	\	TEST PROTOCOL DOOR	${PROTOCOL}	${DOOR}


REMOVE LOCAL FILES WITH NAMES CONTAINING
	[Arguments]	${FILE_NAME_ID}
	@{FILES_IN_DIR}=	LIST FILES IN DIRECTORY	${LOCAL_DIR}	pattern=${FILE_NAME_ID}*
	:FOR	${FILE}		IN	@{FILES_IN_DIR}
	\	REMOVE FILE	${FILE}

REMOVE REMOTE FILES WITH NAMES CONTAINING
	[Arguments]	${FILE_NAME_ID}
	SET CLIENT	srmls
	SET HOST	${HOST}
	${PORT}=	GET FROM DICTIONARY	${PROTOCOL_DOORS}	srm
	SET PROTOCOL	srm	${PORT}
	${FILES_IN_DIR}=	GET REMOTE FILES LIST	${REMOTE_DIR}
	${MATCHED_FILES}=	GET MATCHES	${FILES_IN_DIR}		*${FILE_NAME_ID}*
	:FOR 	${FILE}		IN	@{MATCHED_FILES}
	\	REMOVE FILE WITH CLIENT AND PROTOCOL	srmrm	srm	${FILE}	

REMOVE LOCAL AND REMOTE FILES WITH NAMES CONTAINING
	[Arguments]	${LOCAL_FILE_ID}	${REMOTE_FILE_ID}
	REMOVE LOCAL FILES WITH NAMES CONTAINING	${LOCAL_FILE_ID}
	REMOVE REMOTE FILES WITH NAMES CONTAINING	${REMOTE_FILE_ID}
